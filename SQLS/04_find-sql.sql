-- 1. 모든 유저 정보 출력
SELECT 
	I.USER_NO,
	I.TEAM_NO,
	I.USER_ID,
	I.USER_EMAIL ,
	I.USER_NAME,
	I.USER_PHONE,
	I.USER_SNS,
	I.USER_BD,
	I.USER_ADDRESS,
	I.USER_GENDER ,
	I.USER_NATION ,
	I.USER_IMG_ORIGIN ,
	I.USER_IMG_RENAME,
	I.USER_AUTHORITY ,
	I.USER_ST ,
	TO_CHAR(I.CREATE_DT, 'YYYY-MM-DD HH24:MM:SS') AS CREATE_DT,
	TO_CHAR(I.DELETE_DT, 'YYYY-MM-DD HH24:MM:SS') AS DELETE_DT,
	P.AGREE_ADDRESS,
	P.AGREE_EMAIL,
	P.AGREE_PHONE
FROM USER_INFO I
JOIN USER_POLICY P ON (I.USER_NO = P.USER_NO)
WHERE USER_ID = 'sportsAdmin';

-- 2. 스칼라 서브쿼리를 이용하여, 각 유저별 최근 로그인 정보 하나만을 들고오는 모든 유저 정보 출력
SELECT 
	I.USER_NO,
	I.TEAM_NO,
	I.USER_ID,
	I.USER_EMAIL,
	I.USER_NAME,
	I.USER_PHONE,
	I.USER_SNS,
	I.USER_BD,
	I.USER_ADDRESS,
	I.USER_GENDER ,
	I.USER_NATION ,
	I.USER_IMG_ORIGIN ,
	I.USER_IMG_RENAME,
	I.USER_AUTHORITY ,
	I.USER_ST,
	TO_CHAR(I.CREATE_DT, 'YYYY-MM-DD HH24:MM:SS') AS CREATE_DT,
	TO_CHAR(I.DELETE_DT, 'YYYY-MM-DD HH24:MM:SS') AS DELETE_DT,
	P.AGREE_ADDRESS,
	P.AGREE_EMAIL,
	P.AGREE_PHONE,
	(SELECT MAX(H.LOGIN_DT)
     FROM USER_HISTORY H
     WHERE H.USER_NO = I.USER_NO) AS LAST_LOGIN_DT
FROM USER_INFO I
JOIN USER_POLICY P ON (I.USER_NO = P.USER_NO);

SELECT USER_ID, USER_PW, USER_EMAIL, USER_NAME FROM USER_INFO
ORDER BY USER_NO DESC;

DELETE FROM USER_INFO WHERE DELETE_DT < SYSDATE  - INTERVAL '7' DAY;
COMMIT;

COMMIT;
ROLLBACK;

SELECT * FROM USER_POLICY;
SELECT * FROM USER_SESSION;
SELECT * FROM USER_HISTORY;

-- 2. SESSION 정보 출력
SELECT * FROM USER_SESSION;
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') FROM DUAL;


-- 3. HISTORY 정보 출력
SELECT * FROM USER_HISTORY
WHERE USER_NO = 1
ORDER BY LOGIN_DT DESC;

SELECT USER_ID, USER_PW, S.SESSION_UUID FROM USER_INFO U
JOIN USER_SESSION S ON (U.USER_NO = S.USER_NO)
WHERE S.SESSION_UUID = '4267a216-6e30-47e7-8856-74dd130acf37';


-- 4. 뉴스 출력
SELECT N.*, U.USER_NAME, T.TEAM_NAME 
FROM NEWS N
JOIN USER_INFO U ON N.USER_NO = U.USER_NO
JOIN TEAMS T ON N.TEAM_NO = T.TEAM_NO
WHERE N.NEWS_NO = 1;


-- 5. 모든 팀 정보(이름, 색깔, 로고) 출력
SELECT TEAM_NO, TEAM_NAME, 
		   (SELECT IMG_ORIGINAL FROM TEAM_IMG 
		    WHERE TEAM_IMG.TEAM_NO = TEAMS.TEAM_NO 
		    AND IMG_LEVEL = 1) AS IMG_ORIGINAL, 
		TEAM_COLOR 
		FROM TEAMS 
		WHERE TEAM_ST = 'Y';
        
        SELECT IMG_ORIGINAL FROM TEAM_IMG JOIN TEAMS USING(TEAM_NO)
		     WHERE IMG_LEVEL = 1;
            
        
SELECT TEAM_NO, TEAM_NAME,IMG_ORIGINAL, TEAM_COLOR
FROM TEAMS
JOIN TEAM_IMG USING(TEAM_NO)
WHERE TEAM_ST='Y'
AND IMG_LEVEL = 1;

-- 5-1. 특정 팀 정보

