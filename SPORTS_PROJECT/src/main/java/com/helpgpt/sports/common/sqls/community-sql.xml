<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>커뮤니티 xml파일</comment>

	<entry key="selectBoardList">
		SELECT 
		    P.TYPE_NAME, 
		    C.COMM_TITLE, 
		    U.USER_NAME, 
		    C.CREATE_DT, 
		    C.COMM_VIEWS, 
		    T.TEAM_NAME, 
		    C.COMM_NO,
		    (SELECT COUNT(*) 
		     FROM REPLY R
		     WHERE R.REPLY_TARGET_NO = C.COMM_NO
		     AND R.REPLY_TYPE_NO = 1
		     AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		    (SELECT COUNT(*) 
		     FROM "LIKE" L 
		     WHERE L.LIKE_TARGET_NO = C.COMM_NO
		     AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT
		FROM COMM C
		LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		JOIN USER_INFO U USING(USER_NO)
		JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		WHERE C.COMM_TYPE = ?
		AND C.COMM_ST = 'N'
		ORDER BY C.COMM_NO DESC
	</entry>
	
	
	<entry key="selectBoardListAll">
		SELECT 
		    P.TYPE_NAME, 
		    C.COMM_TITLE, 
		    U.USER_NAME, 
		    C.CREATE_DT, 
		    C.COMM_VIEWS, 
		    T.TEAM_NAME, 
		    C.COMM_NO, 
		    C.COMM_TYPE,
		    (SELECT COUNT(*) 
		     FROM REPLY R
		     WHERE R.REPLY_TARGET_NO = C.COMM_NO
		     AND R.REPLY_TYPE_NO = 1
		     AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		    (SELECT COUNT(*) 
		     FROM "LIKE" L 
		     WHERE L.LIKE_TARGET_NO = C.COMM_NO
		     AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT
		FROM COMM C
		LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		JOIN USER_INFO U USING(USER_NO)
		JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		WHERE C.COMM_ST = 'N'
		ORDER BY C.COMM_NO DESC
	</entry>
	
	<!-- 팀 이름 가져오기 -->
	<entry key="selectTeams">
		SELECT TEAM_NO, TEAM_NAME FROM TEAMS
	</entry>
	
	<!-- 팀별 게시판 가져오기 -->
	<entry key="selectTeamBoardList">
		SELECT 
		    P.TYPE_NAME, 
		    C.COMM_TITLE, 
		    U.USER_NAME, 
		    C.CREATE_DT, 
		    C.COMM_VIEWS, 
		    T.TEAM_NAME, 
		    C.COMM_NO,
		    (SELECT COUNT(*) 
		     FROM REPLY R
		     WHERE R.REPLY_TARGET_NO = C.COMM_NO
		     AND R.REPLY_TYPE_NO = 1
		     AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		    (SELECT COUNT(*) 
		     FROM "LIKE" L 
		     WHERE L.LIKE_TARGET_NO = C.COMM_NO
		     AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT
		FROM COMM C
		LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		JOIN USER_INFO U USING(USER_NO)
		JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		WHERE C.TEAM_NO = ?
		AND C.COMM_ST = 'N'
		ORDER BY C.COMM_NO DESC
	</entry>
	
	<!-- 게시글 상세 -->
	<entry key="selectBoardDetail">
		SELECT C.COMM_CONTENT, C.COMM_TITLE, U.USER_NAME, C.CREATE_DT, C.COMM_VIEWS, TYPE_NAME, TEAM_NAME
		FROM COMM C
		LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		JOIN USER_INFO U USING(USER_NO)
		JOIN COMM_TYPE T ON TYPE_NO = COMM_TYPE
		WHERE COMM_NO = ?
	</entry>
	
	
		<!-- 게시글 등록 -->
	<entry key="insertBoard">
		INSERT INTO COMM 
		VALUES(SEQ_COMM_NO.NEXTVAL, ?, ?, ?, ?, ?, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</entry>
	
	<!-- 최근 게시글 번호 조회 -->
	<entry key="selectCurrentNo">
		SELECT COMM_NO FROM
		(SELECT * FROM COMM ORDER BY COMM_NO DESC)
		WHERE ROWNUM = 1
	</entry>
	
	<!-- 게시글 이미지 삽입 -->
	<entry key="insertImage">
		INSERT INTO COMM_IMG
		VALUES(?, ?, ?, 0)
	</entry>
	
		<!-- 게시글 이미지 조회 -->
	<entry key="selectBoardImage">
		SELECT IMG_RENAME FROM COMM_IMG 
		WHERE COMM_NO = ?
	</entry>
	
	<!-- 메인 페이지 조회(공지, 자유, 응원) -->
	<entry key="selectMainPage">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT 
		        P.TYPE_NAME, 
		        C.COMM_TITLE, 
		        U.USER_NAME, 
		        C.CREATE_DT, 
		        C.COMM_VIEWS, 
		        T.TEAM_NAME, 
		        C.COMM_NO,
		        (SELECT COUNT(*) 
		         FROM REPLY R
		         WHERE R.REPLY_TARGET_NO = C.COMM_NO
		         AND R.REPLY_TYPE_NO = 1
		         AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		        (SELECT COUNT(*) 
		         FROM "LIKE" L 
		         WHERE L.LIKE_TARGET_NO = C.COMM_NO
		         AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT,
		        ROW_NUMBER() OVER (ORDER BY C.COMM_NO DESC) AS RN
		    FROM COMM C
		    LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		    JOIN USER_INFO U USING(USER_NO)
		    JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		    WHERE C.COMM_TYPE = ?
		    AND C.COMM_ST = 'N'
		)
		WHERE RN <= 5
	 ]]>
	</entry>
	
		<!-- 메인 페이지 조회(전체) -->
	<entry key="selectMainPageAll">
	<![CDATA[
		SELECT *
		FROM (
		    SELECT 
		        P.TYPE_NAME, 
		        C.COMM_TITLE, 
		        U.USER_NAME, 
		        C.CREATE_DT, 
		        C.COMM_VIEWS, 
		        T.TEAM_NAME, 
		        C.COMM_NO, 
		        C.COMM_TYPE,
		        (SELECT COUNT(*) 
		         FROM REPLY R
		         WHERE R.REPLY_TARGET_NO = C.COMM_NO
		         AND R.REPLY_TYPE_NO = 1
		         AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		        (SELECT COUNT(*) 
		         FROM "LIKE" L 
		         WHERE L.LIKE_TARGET_NO = C.COMM_NO
		         AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT,
		        ROW_NUMBER() OVER (ORDER BY C.COMM_NO DESC) AS RN
		    FROM COMM C
		    LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		    JOIN USER_INFO U USING(USER_NO)
		    JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		    WHERE C.COMM_ST = 'N'
		)
		WHERE RN <= 5

	 ]]>
	</entry>
	
	<!-- 게시글 삭제 -->
	<entry key="deleteBoard">
		UPDATE COMM SET COMM_ST = 'Y' WHERE COMM_NO = ?
	</entry>
	
	<!-- 인기 게시판 -->
	<entry key="selectPopularBoardList">
		<![CDATA[
		SELECT *
		FROM (
		    SELECT 
		        P.TYPE_NAME, 
		        C.COMM_TITLE,
		        C.COMM_CONTENT, 
		        U.USER_NAME, 
		        C.CREATE_DT, 
		        C.COMM_VIEWS, 
		        T.TEAM_NAME, 
		        C.COMM_NO, 
		        C.COMM_TYPE,
		        (SELECT COUNT(*) 
		         FROM REPLY R
		         WHERE R.REPLY_TARGET_NO = C.COMM_NO
		         AND R.REPLY_TYPE_NO = 1
		         AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		        (SELECT COUNT(*) 
		         FROM "LIKE" L 
		         WHERE L.LIKE_TARGET_NO = C.COMM_NO
		         AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT,
		        ROW_NUMBER() OVER (ORDER BY (SELECT COUNT(*) 
		                                     FROM "LIKE" L 
		                                     WHERE L.LIKE_TARGET_NO = C.COMM_NO
		                                     AND L.LIKE_TYPE_NO = 1) DESC, 
		                           C.COMM_NO DESC) AS RN
		    FROM COMM C
		    LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		    JOIN USER_INFO U USING(USER_NO)
		    JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		    WHERE C.COMM_ST = 'N'
		)
		WHERE RN <= 10
		ORDER BY LIKE_COUNT DESC, COMM_NO DESC
		 ]]>
	</entry>
	
	<!-- 베스트 댓글 -->
	<entry key="selectBestReply">
		SELECT *
		FROM (
		    SELECT 
		        P.TYPE_NAME,       
		        C.COMM_TITLE,         
		        UR.USER_NAME, 
		        UR.USER_IMG_RENAME, 
		        R.REPLY_CONTENT,                   
		        COALESCE(COUNT(L.LIKE_TARGET_NO), 0) AS REPLY_LIKE_COUNT, 
		        R.REPLY_NO                        
		    FROM COMM C
		    JOIN REPLY R ON C.COMM_NO = R.REPLY_TARGET_NO
		    JOIN USER_INFO UR ON R.USER_NO = UR.USER_NO
		    LEFT JOIN "LIKE" L ON R.REPLY_NO = L.LIKE_TARGET_NO
		        AND L.LIKE_TYPE_NO = 2 
		    JOIN COMM_TYPE P ON C.COMM_TYPE = P.TYPE_NO
		    WHERE C.COMM_ST = 'N'           -- 게시글 상태가 'N'인 것
		      AND R.REPLY_ST = 'N'          -- 댓글 상태가 'N'인 것 (가정: 댓글 상태가 저장된 컬럼이 R.REPLY_ST일 경우)
		      AND R.REPLY_TYPE_NO = 1 
		    GROUP BY 
		        P.TYPE_NAME,
		        C.COMM_TITLE,
		        UR.USER_NAME,
		        UR.USER_IMG_RENAME,
		        R.REPLY_CONTENT,
		        R.REPLY_NO
		) subquery
		ORDER BY 
		    REPLY_LIKE_COUNT DESC,   
		    REPLY_NO DESC            
		FETCH FIRST 5 ROWS ONLY


	</entry>
	
	<!-- 게시글 검색 -->
	<entry key="searchBoard">
			SELECT 
			C.COMM_TYPE,
		    P.TYPE_NAME, 
		    C.COMM_TITLE, 
		    U.USER_NAME, 
		    C.CREATE_DT, 
		    C.COMM_VIEWS, 
		    T.TEAM_NAME, 
		    C.COMM_NO,
		    (SELECT COUNT(*) 
		     FROM REPLY R
		     WHERE R.REPLY_TARGET_NO = C.COMM_NO
		     AND R.REPLY_TYPE_NO = 1
		     AND R.REPLY_ST = 'N') AS REPLY_COUNT,
		    (SELECT COUNT(*) 
		     FROM "LIKE" L 
		     WHERE L.LIKE_TARGET_NO = C.COMM_NO
		     AND L.LIKE_TYPE_NO = 1) AS LIKE_COUNT
		FROM COMM C
		LEFT JOIN TEAMS T ON T.TEAM_NO = C.TEAM_NO
		JOIN USER_INFO U USING(USER_NO)
		JOIN COMM_TYPE P ON P.TYPE_NO = C.COMM_TYPE
		WHERE C.COMM_ST = 'N'
	</entry>
	
	<!-- 게시글 내용 수정 -->
	<entry key="updateBoard">
		UPDATE COMM
		   SET COMM_TITLE = ?,
		      COMM_CONTENT = ?,
		      UPDATE_DT = SYSDATE
		 WHERE COMM_NO = ?
	</entry>
	
		<!-- 게시글 이미지 수정 -->
	<entry key="updateImage">
		UPDATE COMM_IMG
		   SET IMG_RENAME = ?,
		      IMG_ORIGINAL = ?
		 WHERE COMM_NO = ?
	</entry>
	
	
	
</properties>
